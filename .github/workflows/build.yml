name: Build pghoard

on:
  push:
    branches:
      - master
    tags:
      - '**'
  pull_request:

jobs:

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # only use one version for the lint step
        python-version: [3.8]

    steps:

      - id: checkout-code
        uses: actions/checkout@v2

      - id: prepare-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - id: dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements.dev.txt

      - id: pylint
        run: make lint

      - id: validate-style
        run: |
          make fmt
          if [ $(git diff --name-only --diff-filter=ACMR | wc -l ) != 0 ]; then
            echo "Reformatting failed! Please run make fmt on your commits and resubmit!" 1>&2;
            git diff;
            exit 1;
          fi

  test:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]
        pg-version: [9.6, 10, 11, 12]

    steps:
      - id: checkout-code
        uses: actions/checkout@v2

      - id: prepare-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - id: dependencies
        run: |
          # Setup the Postgres repositories
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt-get update
          # Setup build deps
          sudo apt-get install -y libsnappy-dev
          sudo apt-get install -y postgresql-${{ matrix.pg-version }}
          # Setup common python dependencies
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install --upgrade -r requirements.dev.txt
          pip install -e .

      - id: unittest
        run: make unittest
